--- a/lddtree.sh
+++ b/lddtree.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/opt/bin/bash
 # Copyright 2007-2013 Gentoo Foundation
 # Copyright 2007-2013 Mike Frysinger <vapier@gentoo.org>
 # Distributed under the terms of the GNU General Public License v2
@@ -45,7 +45,7 @@ elf_specs() {
 		sed -E 's: (LINUX|GNU)$: NONE:'
 }
 
-lib_paths_fallback="${ROOT}lib* ${ROOT}usr/lib* ${ROOT}usr/local/lib*"
+lib_paths_fallback="${ROOT}opt/lib* ${ROOT}opt/usr/lib* ${ROOT}lib* ${ROOT}usr/lib*"
 c_ldso_paths_loaded='false'
 find_elf() {
 	_find_elf=''
@@ -92,7 +92,7 @@ find_elf() {
 		if ! ${c_ldso_paths_loaded} ; then
 			c_ldso_paths_loaded='true'
 			c_ldso_paths=()
-			if [[ -r ${ROOT}etc/ld.so.conf ]] ; then
+			if [[ -r ${ROOT}opt/etc/ld.so.conf ]] ; then
 				read_ldso_conf() {
 					local line p
 					for p ; do
@@ -109,8 +109,8 @@ find_elf() {
 					done
 				}
 				# the 'include' command is relative
-				pushd "${ROOT}"etc >/dev/null
-				read_ldso_conf "${ROOT}"etc/ld.so.conf
+				pushd "${ROOT}"opt/etc >/dev/null
+				read_ldso_conf "${ROOT}"opt/etc/ld.so.conf
 				popd >/dev/null
 			fi
 		fi
--- a/paxldso.c
+++ b/paxldso.c
@@ -359,7 +359,7 @@ int ldso_config_load(const char *fname)
 
 			/* re-use existing path buffer ... need to be creative */
 			if (path[8] != '/')
-				gpath = memcpy(path + 3, "/etc/", 5);
+				gpath = memcpy(path + 3, "/opt/etc/", 5);
 			else
 				gpath = path + 8;
 			if (root_fd != AT_FDCWD) {
@@ -460,7 +460,7 @@ void paxldso_cleanup(void)
 }
 #endif
 
-const char *ldcache_path = "/etc/ld.so.cache";
+const char *ldcache_path = "/opt/etc/ld.so.cache";
 
 #ifdef MAIN
 
--- a/porting.h
+++ b/porting.h
@@ -67,7 +67,7 @@
 #endif
 
 #if defined(__GLIBC__) || defined(__UCLIBC__) || defined(__NetBSD__)
-# define __PAX_UTILS_DEFAULT_LD_CACHE_CONFIG "/etc/ld.so.conf"
+# define __PAX_UTILS_DEFAULT_LD_CACHE_CONFIG "/opt/etc/ld.so.conf"
 #elif HAS_ELF_HINTS_H
 # include <elf-hints.h>
 # define __PAX_UTILS_DEFAULT_LD_CACHE_CONFIG _PATH_ELF_HINTS
--- a/scanelf.c
+++ b/scanelf.c
@@ -1780,22 +1780,20 @@ static int scanelf_from_file(const char
 
 static void load_ld_cache_config(const char *fname)
 {
-	bool scan_l, scan_ul, scan_ull;
+	bool scan_l, scan_ul;
 	size_t n;
 	const char *ldpath;
 
 	ldso_config_load(fname);
 
-	scan_l = scan_ul = scan_ull = false;
+	scan_l = scan_ul = false;
 	array_for_each(ldpaths, n, ldpath) {
-		if (!scan_l   && !strcmp(ldpath, "/lib"))           scan_l   = true;
-		if (!scan_ul  && !strcmp(ldpath, "/usr/lib"))       scan_ul  = true;
-		if (!scan_ull && !strcmp(ldpath, "/usr/local/lib")) scan_ull = true;
+		if (!scan_l   && !strcmp(ldpath, "/opt/lib"))		scan_l   = true;
+		if (!scan_ul  && !strcmp(ldpath, "/opt/usr/lib"))	scan_ul  = true;
 	}
 
-	if (!scan_l)   xarraypush_str(ldpaths, "/lib");
-	if (!scan_ul)  xarraypush_str(ldpaths, "/usr/lib");
-	if (!scan_ull) xarraypush_str(ldpaths, "/usr/local/lib");
+	if (!scan_l)   xarraypush_str(ldpaths, "/opt/lib");
+	if (!scan_ul)  xarraypush_str(ldpaths, "/opt/usr/lib");
 }
 
 /* scan /etc/ld.so.conf for paths */
@@ -1877,7 +1875,7 @@ static struct option const long_opts[] =
 
 static const char * const opts_help[] = {
 	"Scan all directories in PATH environment",
-	"Scan all directories in /etc/ld.so.conf",
+	"Scan all directories in /opt/etc/ld.so.conf",
 	"Use alternate ld.so.cache specified in <arg>",
 	"Use ld.so.conf to show full path (use with -r/-n)",
 	"Root directory (use with -l or -p)",
--- a/symtree.sh
+++ b/symtree.sh
@@ -1,4 +1,4 @@
-#!/bin/bash
+#!/opt/bin/bash
 
 argv0=${0##*/}
 
