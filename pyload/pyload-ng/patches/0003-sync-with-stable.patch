From 8cfda7821c8b4fcf17d5067e2f4ecaac227f4339 Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Sun, 2 May 2021 22:39:16 +0300
Subject: [PATCH 003/150] sync with stable

---
 .../plugins/downloaders/FileuploadCom.py      | 31 ++++++++++
 .../plugins/downloaders/UploadshipCom.py      | 59 +++++++++++++++++++
 .../plugins/downloaders/UseruploadNet.py      | 47 +++++++++++++++
 3 files changed, 137 insertions(+)
 create mode 100644 src/pyload/plugins/downloaders/FileuploadCom.py
 create mode 100644 src/pyload/plugins/downloaders/UploadshipCom.py
 create mode 100644 src/pyload/plugins/downloaders/UseruploadNet.py

--- /dev/null
+++ b/src/pyload/plugins/downloaders/FileuploadCom.py
@@ -0,0 +1,31 @@
+# -*- coding: utf-8 -*-
+
+from ..base.xfs_downloader import XFSDownloader
+
+
+class FileuploadCom(XFSDownloader):
+    __name__ = "FileuploadCom"
+    __type__ = "downloader"
+    __version__ = "0.02"
+    __status__ = "testing"
+
+    __pattern__ = r"https?://(?:www\.)?file-upload\.com/\w{12}"
+    __config__ = [
+        ("enabled", "bool", "Activated", True),
+        ("use_premium", "bool", "Use premium account if available", True),
+        ("fallback", "bool", "Fallback to free download if premium fails", True),
+        ("chk_filesize", "bool", "Check file size", True),
+        ("max_wait", "int", "Reconnect if waiting time is greater than minutes", 10),
+    ]
+
+    __description__ = """Fileupload.com downloader plugin"""
+    __license__ = "GPLv3"
+    __authors__ = [("OzzieIsaacs", "ozzie.fernandez.isaacs@gmail.com")]
+
+    PLUGIN_DOMAIN = "fileupload.com"
+
+    NAME_PATTERN = r'<input type="hidden" name="fname" value="(?P<N>.+?)">'
+    SIZE_PATTERN = r"</span> ((?P<S>[\d.,]+) (?P<U>[\w^_]+))</p>"
+    WAIT_PATTERN = r'<span class="label label-danger seconds">(\d+)</span>'
+
+    LINK_PATTERN = r'<a id="download-btn" class="btn btn-sm btn-success" href="(.+?)">Click here to download</a>'
--- /dev/null
+++ b/src/pyload/plugins/downloaders/UploadshipCom.py
@@ -0,0 +1,59 @@
+# -*- coding: utf-8 -*-
+
+import re
+
+from ..base.xfs_downloader import XFSDownloader
+
+
+class UploadshipCom(XFSDownloader):
+    __name__ = "UploadshipCom"
+    __type__ = "downloader"
+    __version__ = "0.02"
+    __status__ = "testing"
+
+    __pattern__ = r"https?://(?:www\.)?uploadship\.com/\w{16}"
+    __config__ = [
+        ("enabled", "bool", "Activated", True),
+        ("use_premium", "bool", "Use premium account if available", True),
+        ("fallback", "bool", "Fallback to free download if premium fails", True),
+        ("chk_filesize", "bool", "Check file size", True),
+        ("max_wait", "int", "Reconnect if waiting time is greater than minutes", 10),
+    ]
+
+    __description__ = """Uploadship.com downloader plugin"""
+    __license__ = "GPLv3"
+    __authors__ = [("OzzieIsaacs", "ozzie.fernandez.isaacs@gmail.com")]
+
+    PLUGIN_DOMAIN = "uploadship.com"
+
+    NAME_PATTERN = r'<span style="display: block; line-height: 17px; word-break: break-all;"><small>(?P<N>.+?)</small></span>'
+    SIZE_PATTERN = r'<i class="fa fa-hdd-o" aria-hidden="true"></td><td>((?P<S>[\d.,]+) (?P<U>[\w^_]+)) :'
+    WAIT_PATTERN = r"\$\('\.download-timer-seconds'\)\.html\((\d+)\);"
+
+    FORM_INPUTS_MAP = {"d": re.compile(r"^1")}
+    LINK_PATTERN = r'href="(.+?)" target="_blank" class="btn btn-go">Click Here To Download'
+
+    ERROR_PATTERN = None
+
+    def handle_free(self, pyfile):
+        action, inputs = self.parse_html_form(
+            self.FORM_PATTERN or "", self.FORM_INPUTS_MAP or {}
+        )
+
+        secret = re.search(r'"data": {\r\n"(\w{32})": "(\w{32})"', self.data, re.S)
+        if secret is not None:
+            get_data = {secret.group(1): secret.group(2)}
+            secret_data = self.load(
+                "https://www.uploadship.com/" + secret.group(1) + ".php", get=get_data
+            )
+            inputs[secret.group(1)] = secret_data
+
+        self.handle_captcha(inputs)
+
+        self.data = self.load(
+            pyfile.url, post=inputs, ref=self.pyfile.url, redirect=False
+        )
+
+        m = re.search(self.LINK_PATTERN, self.data, re.M)
+        if m is not None:
+            self.link = m.group(1)
--- /dev/null
+++ b/src/pyload/plugins/downloaders/UseruploadNet.py
@@ -0,0 +1,47 @@
+# -*- coding: utf-8 -*-
+
+import re
+
+from ..base.xfs_downloader import XFSDownloader
+
+
+class UseruploadNet(XFSDownloader):
+    __name__ = "UseruploadNet"
+    __type__ = "downloader"
+    __version__ = "0.02"
+    __status__ = "testing"
+
+    __pattern__ = r"https?://(?:www\.)?userupload\.net/\w{12}"
+    __config__ = [
+        ("enabled", "bool", "Activated", True),
+        ("use_premium", "bool", "Use premium account if available", True),
+        ("fallback", "bool", "Fallback to free download if premium fails", True),
+        ("chk_filesize", "bool", "Check file size", True),
+        ("max_wait", "int", "Reconnect if waiting time is greater than minutes", 10),
+    ]
+
+    __description__ = """Userupload.net downloader plugin"""
+    __license__ = "GPLv3"
+    __authors__ = [("OzzieIsaacs", "ozzie.fernandez.isaacs@gmail.com")]
+
+    PLUGIN_DOMAIN = "userupload.net"
+
+    NAME_PATTERN = r"<title>Download (?P<N>.+?)</title>"
+    SIZE_PATTERN = r"<span>File Size : (?P<S>[\d.,]+) (?P<U>[\w^_]+)</span>"
+
+    LINK_PATTERN = r'<a href="(.+?)" type="button" class="btn btn-primary btn-block mb-4">'
+
+    def handle_free(self, pyfile):
+        self.check_errors()
+
+        self.data = self.load(
+            pyfile.url,
+            post=self._post_parameters(),
+            ref=self.pyfile.url,
+            redirect=False,
+        )
+
+        m = re.search(self.LINK_PATTERN, self.data)
+        if m is not None:
+            self.link = m.group(1)
+            pyfile.name = self.link.split("/")[-1]
