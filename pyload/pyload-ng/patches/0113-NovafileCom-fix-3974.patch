From 047ba69c71ca329046b5253e996a0ca89cedaf57 Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Mon, 21 Jun 2021 23:29:36 +0300
Subject: [PATCH 113/150] [NovafileCom] fix #3974

---
 src/pyload/plugins/downloaders/NovafileCom.py | 46 +++++++++++++++++--
 1 file changed, 43 insertions(+), 3 deletions(-)

--- a/src/pyload/plugins/downloaders/NovafileCom.py
+++ b/src/pyload/plugins/downloaders/NovafileCom.py
@@ -5,16 +5,22 @@
 # http://novafile.com/vfun4z6o2cit
 # http://novafile.com/s6zrr5wemuz4
 
+import re
+import urllib.parse
+
+import pycurl
+
+from ..anticaptchas.HCaptcha import HCaptcha
 from ..base.xfs_downloader import XFSDownloader
 
 
 class NovafileCom(XFSDownloader):
     __name__ = "NovafileCom"
     __type__ = "downloader"
-    __version__ = "0.11"
+    __version__ = "0.12"
     __status__ = "testing"
 
-    __pattern__ = r"http://(?:www\.)?novafile\.com/\w{12}"
+    __pattern__ = r"https?://(?:www\.)?novafile\.com/\w{12}"
     __config__ = [
         ("enabled", "bool", "Activated", True),
         ("use_premium", "bool", "Use premium account if available", True),
@@ -35,4 +41,38 @@ class NovafileCom(XFSDownloader):
     ERROR_PATTERN = r'class="alert.+?alert-separate".*?>\s*(?:<p>)?(.*?)\s*</'
     WAIT_PATTERN = r'<p>Please wait <span id="count".*?>(\d+)</span> seconds</p>'
 
-    LINK_PATTERN = r'<a href="(http://s\d+\.novafile\.com/.*?)" class="btn btn-green">Download File</a>'
+    LINK_PATTERN = r'<a href="(https://s\d+\.novafile\.com/.*?)" class="btn btn-green">Download File</a>'
+
+    def handle_captcha(self, inputs):
+        m = re.search(r'\$\.post\( "/ddl",\s*\{(.+?) \} \);', self.data)
+        if m is not None:
+            hcaptcha = HCaptcha(self.pyfile)
+            captcha_key = hcaptcha.detect_key()
+            if captcha_key:
+                self.captcha = hcaptcha
+                response = hcaptcha.challenge(captcha_key)
+
+                captcha_inputs = {}
+                for _i in m.group(1).split(","):
+                    _k, _v = _i.split(":", 1)
+                    _k = _k.strip('" ')
+                    if "g-recaptcha-response" in _v:
+                        _v = response
+
+                    captcha_inputs[_k] = _v.strip('" ')
+
+                self.req.http.c.setopt(
+                    pycurl.HTTPHEADER, ["X-Requested-With: XMLHttpRequest"]
+                )
+
+                html = self.load(
+                    urllib.parse.urljoin(self.pyfile.url, "/ddl"), post=captcha_inputs
+                )
+
+                self.req.http.c.setopt(pycurl.HTTPHEADER, ["X-Requested-With:"])
+
+                if html == "OK":
+                    self.captcha.correct()
+
+                else:
+                    self.retry_captcha()
