From 89b087e80eb14e6d8684868e43b95ba2fca7ddcb Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Tue, 23 Nov 2021 21:06:26 +0200
Subject: [PATCH 14/73] remove BigfileTo

---
 src/pyload/plugins/accounts/BigfileTo.py      | 43 ----------
 .../plugins/decrypters/BigfileToFolder.py     | 40 ---------
 src/pyload/plugins/downloaders/BigfileTo.py   | 85 -------------------
 3 files changed, 168 deletions(-)
 delete mode 100644 src/pyload/plugins/accounts/BigfileTo.py
 delete mode 100644 src/pyload/plugins/decrypters/BigfileToFolder.py
 delete mode 100644 src/pyload/plugins/downloaders/BigfileTo.py

diff --git a/src/pyload/plugins/accounts/BigfileTo.py b/src/pyload/plugins/accounts/BigfileTo.py
deleted file mode 100644
index fa57c3bf9..000000000
--- a/src/pyload/plugins/accounts/BigfileTo.py
+++ /dev/null
@@ -1,43 +0,0 @@
-# -*- coding: utf-8 -*-
-
-from ..base.account import BaseAccount
-
-
-class BigfileTo(BaseAccount):
-    __name__ = "BigfileTo"
-    __type__ = "account"
-    __version__ = "0.11"
-    __status__ = "testing"
-
-    __description__ = """bigfile.to account plugin"""
-    __license__ = "GPLv3"
-    __authors__ = [
-        ("Sasch", "gsasch@gmail.com"),
-        ("GammaC0de", "nitzo2001[AT]yahoo[DOT]com"),
-    ]
-
-    def grab_info(self, user, password, data):
-        html = self.load("https://www.bigfile.to/login.php")
-
-        premium = '<a href="/logout.php"' in html
-        trafficleft = -1 if premium else None
-
-        return {
-            "validuntil": None,
-            "trafficleft": trafficleft,
-            "premium": premium,
-        }  # TODO: validuntil
-
-    def signin(self, user, password, data):
-        html = self.load(
-            "https://www.bigfile.to/login.php",
-            post={
-                "userName": user,
-                "userPassword": password,
-                "autoLogin": "1",
-                "action__login": "normalLogin",
-            },
-        )
-
-        if "Login failed" in html:
-            self.fail_login()
diff --git a/src/pyload/plugins/decrypters/BigfileToFolder.py b/src/pyload/plugins/decrypters/BigfileToFolder.py
deleted file mode 100644
index e6d9994ff..000000000
--- a/src/pyload/plugins/decrypters/BigfileToFolder.py
+++ /dev/null
@@ -1,40 +0,0 @@
-# -*- coding: utf-8 -*-
-
-from ..base.simple_decrypter import SimpleDecrypter
-
-
-class BigfileToFolder(SimpleDecrypter):
-    __name__ = "BigfileToFolder"
-    __type__ = "decrypter"
-    __version__ = "0.11"
-    __status__ = "testing"
-
-    __pattern__ = r"https?://(?:www\.)?(?:uploadable\.ch|bigfile\.to)/list/\w+"
-    __config__ = [
-        ("enabled", "bool", "Activated", True),
-        ("use_premium", "bool", "Use premium account if available", True),
-        (
-            "folder_per_package",
-            "Default;Yes;No",
-            "Create folder for each package",
-            "Default",
-        ),
-        ("max_wait", "int", "Reconnect if waiting time is greater than minutes", 10),
-    ]
-
-    __description__ = """bigfile.to folder decrypter plugin"""
-    __license__ = "GPLv3"
-    __authors__ = [
-        ("guidobelix", "guidobelix@hotmail.it"),
-        ("Walter Purcaro", "vuolter@gmail.com"),
-        ("GammaC0de", "nitzo2001[AT]yahoo[DOT]com"),
-    ]
-
-    URL_REPLACEMENTS = [(r"https?://uploadable\.ch", "https://bigfile.to")]
-
-    LINK_PATTERN = r'"(.+?)" class="icon_zipfile">'
-    NAME_PATTERN = r'<div class="folder"><span>&nbsp;</span>(?P<N>.+?)</div>'
-    OFFLINE_PATTERN = (
-        r"We are sorry... The URL you entered cannot be found on the server."
-    )
-    TEMP_OFFLINE_PATTERN = r'<div class="icon_err">'
diff --git a/src/pyload/plugins/downloaders/BigfileTo.py b/src/pyload/plugins/downloaders/BigfileTo.py
deleted file mode 100644
index 0fb1df285..000000000
--- a/src/pyload/plugins/downloaders/BigfileTo.py
+++ /dev/null
@@ -1,85 +0,0 @@
-# -*- coding: utf-8 -*-
-
-import json
-import re
-from datetime import timedelta
-
-from ..anticaptchas.ReCaptcha import ReCaptcha
-from ..base.simple_downloader import SimpleDownloader
-
-
-class BigfileTo(SimpleDownloader):
-    __name__ = "BigfileTo"
-    __type__ = "downloader"
-    __version__ = "0.19"
-    __status__ = "testing"
-
-    __pattern__ = r"https?://(?:www\.)?(?:uploadable\.ch|bigfile.to)/file/(?P<ID>\w+)"
-    __config__ = [
-        ("enabled", "bool", "Activated", True),
-        ("use_premium", "bool", "Use premium account if available", True),
-        ("fallback", "bool", "Fallback to free download if premium fails", True),
-        ("chk_filesize", "bool", "Check file size", True),
-        ("max_wait", "int", "Reconnect if waiting time is greater than minutes", 10),
-    ]
-
-    __description__ = """bigfile.to downloader plugin"""
-    __license__ = "GPLv3"
-    __authors__ = [
-        ("zapp-brannigan", "fuerst.reinje@web.de"),
-        ("Walter Purcaro", "vuolter@gmail.com"),
-        ("GammaC0de", "nitzo2001[AT]yahoo[DOT]com"),
-    ]
-
-    URL_REPLACEMENTS = [(__pattern__ + ".*", r"https://www.bigfile.to/file/\g<ID>")]
-
-    INFO_PATTERN = r"div id=\"file_name\" title=.*>(?P<N>.+)<span class=\"filename_normal\">\((?P<S>[\d.]+) (?P<U>\w+)\)</span><"
-
-    OFFLINE_PATTERN = r">(File not available|This file is no longer available)"
-    TEMP_OFFLINE_PATTERN = r'<div class="icon_err">'
-
-    WAIT_PATTERN = r">Please wait[^<]+"
-
-    RECAPTCHA_KEY = "6LfZ0RETAAAAAOjhYT7V9ukeCT3wWccw98uc50vu"
-
-    def handle_free(self, pyfile):
-        #: Click the "free user" button and wait
-        json_data = json.loads(self.load(pyfile.url, post={"downloadLink": "wait"}))
-
-        self.wait(json_data["waitTime"])
-
-        #: Make the ReCaptcha appear and show it the pyload interface
-        json_data = json.loads(self.load(pyfile.url, post={"checkDownload": "check"}))
-        if json_data["success"] == "showCaptcha":
-            self.captcha = ReCaptcha(pyfile)
-
-            response, challenge = self.captcha.challenge(self.RECAPTCHA_KEY)
-
-            #: Submit the captcha solution
-            json_data = json.loads(
-                self.load(
-                    "https://www.bigfile.to/checkReCaptcha.php",
-                    post={
-                        "recaptcha_challenge_field": challenge,
-                        "recaptcha_response_field": response,
-                        "recaptcha_shortencode_field": self.info["pattern"]["ID"],
-                    },
-                )
-            )
-            self.log_debug("json_data", json_data)
-            if json_data["success"] != 1:
-                self.retry_captcha()
-
-        #: Get ready for downloading
-        self.load(pyfile.url, post={"downloadLink": "show"})
-
-        #: Download the file
-        self.download(pyfile.url, post={"download": "normal"}, disposition=True)
-
-    def check_download(self):
-        if self.scan_download({"wait": re.compile("Please wait for")}):
-            self.log_info(self._("Downloadlimit reached, please wait or reconnect"))
-            self.wait(timedelta(hours=1).total_seconds(), True)
-            self.retry()
-
-        return SimpleDownloader.check_download(self)
-- 
2.30.2

