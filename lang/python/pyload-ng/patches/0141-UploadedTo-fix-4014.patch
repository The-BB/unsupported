From e2284e323ee426eae544d3edd257f4b7deb28766 Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Wed, 8 Sep 2021 00:11:18 +0300
Subject: [PATCH 141/150] [UploadedTo] fix #4014

---
 src/pyload/plugins/accounts/UploadedTo.py | 50 +++++++++++------------
 1 file changed, 25 insertions(+), 25 deletions(-)

--- a/src/pyload/plugins/accounts/UploadedTo.py
+++ b/src/pyload/plugins/accounts/UploadedTo.py
@@ -10,18 +10,22 @@ from ..base.account import BaseAccount
 class UploadedTo(BaseAccount):
     __name__ = "UploadedTo"
     __type__ = "account"
-    __version__ = "0.46"
+    __version__ = "0.47"
     __status__ = "testing"
 
     __description__ = """Uploaded.to account plugin"""
     __license__ = "GPLv3"
-    __authors__ = [("Walter Purcaro", "vuolter@gmail.com")]
+    __authors__ = [
+        ("Walter Purcaro", "vuolter@gmail.com"),
+        ("GammaC0de", "nitzo2001[AT]yahoo[DOT]com"),
+    ]
 
     COOKIES = False
 
     PREMIUM_PATTERN = r"<em>Premium</em>"
     VALID_UNTIL_PATTERN = r"<td>Duration:</td>\s*<th>\s*(.+?)<"
     TRAFFIC_LEFT_PATTERN = r'<b class="cB">(?P<S>[\d.,]+) (?P<U>[\w^_]+)'
+    LOGIN_SKIP_PATTERN = r'<a href="logout"'
 
     def grab_info(self, user, password, data):
         html = self.load("http://uploaded.net/me")
@@ -42,16 +46,13 @@ class UploadedTo(BaseAccount):
                     if m is not None:
                         validuntil = time.time()
                         for n, u in m:
-                            validuntil += (
-                                float(n)
-                                * {
-                                    "week": timedelta(weeks=1).seconds,
-                                    "day": timedelta(hours=24).seconds,
-                                    "hour": timedelta(hours=1).seconds,
-                                    "minute": timedelta(minutes=1).seconds,
-                                    "second": 1,
-                                }[u]
-                            )
+                            validuntil += float(n) * {
+                                "week": timedelta(weeks=1).total_seconds(),
+                                "day": timedelta(days=1).total_seconds(),
+                                "hour": timedelta(hours=1).total_seconds(),
+                                "minute": timedelta(minutes=1).total_seconds(),
+                                "second": 1,
+                            }[u]
 
             m = re.search(self.TRAFFIC_LEFT_PATTERN, html)
             if m is not None:
@@ -71,19 +72,18 @@ class UploadedTo(BaseAccount):
         }
 
     def signin(self, user, password, data):
-        try:
-            self.load("http://uploaded.net/me")
-
-            html = self.load(
-                "http://uploaded.net/io/login", post={"id": user, "pw": password}
-            )
+        html = self.load("http://uploaded.net/me")
+        if self.LOGIN_SKIP_PATTERN in html:
+            self.skip_login()
 
-            m = re.search(r'"err":"(.+?)"', html)
-            if m is not None:
-                self.fail_login(m.group(1))
+        html = self.load(
+            "http://uploaded.net/io/login", post={"id": user, "pw": password}
+        )
+
+        m = re.search(r'"err":"(.+?)"', html)
+        if m is not None:
+            self.fail_login(m.group(1))
 
-        except Exception as exc:
-            self.log_error(
-                exc, exc_info=self.pyload.debug > 1, stack_info=self.pyload.debug > 2
-            )
-            self.fail_login(exc)
+        html = self.load("http://uploaded.net/me")
+        if self.LOGIN_SKIP_PATTERN not in html:
+            self.fail_login()
