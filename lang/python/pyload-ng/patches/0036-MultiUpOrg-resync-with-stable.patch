From 9ea84f3b6dcd0781ec16f8d9bf272698ff8dabbd Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Thu, 2 Dec 2021 00:47:27 +0200
Subject: [PATCH 36/73] [MultiUpOrg] resync with stable

---
 src/pyload/plugins/decrypters/MultiUpOrg.py | 42 ++++++++++++---------
 1 file changed, 24 insertions(+), 18 deletions(-)

diff --git a/src/pyload/plugins/decrypters/MultiUpOrg.py b/src/pyload/plugins/decrypters/MultiUpOrg.py
index 8eb6b751a..745a3792c 100644
--- a/src/pyload/plugins/decrypters/MultiUpOrg.py
+++ b/src/pyload/plugins/decrypters/MultiUpOrg.py
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 
 import re
+import urllib.parse
 
 from ..base.simple_decrypter import SimpleDecrypter
 
@@ -34,9 +35,12 @@ class MultiUpOrg(SimpleDecrypter):
         ("GammaC0de", "nitzo2001[AT]yahoo[DOT]com"),
     ]
 
-    NAME_PATTERN = r"<title>.*(?:Project|Projet|ownload|élécharger) (?P<N>.+?) (\(|- )"
+    NAME_PATTERN = (
+        r"<title>.*(?:Project|Projet|Download|Télécharger) (?P<N>.+?) (\(|- )"
+    )
     OFFLINE_PATTERN = r"The requested file could not be found"
     TEMP_OFFLINE_PATTERN = r"^unmatchable$"
+    DIRECT_LINK = False
 
     URL_REPLACEMENTS = [
         (r"https?://(?:www\.)?multiup\.(?:org|eu)/", "https://www.multiup.org/"),
@@ -54,50 +58,52 @@ class MultiUpOrg(SimpleDecrypter):
 
     def get_links(self):
         m_type = self.info["pattern"]["TYPE"]
-        hosts_priority = [h for h in self.config.get("hosts_priority").split("|") if h]
-        ignored_hosts = [h for h in self.config.get("ignored_hosts").split("|") if h]
+        hosts_priority = [
+            _h for _h in self.config.get("hosts_priority").split("|") if _h
+        ]
+        ignored_hosts = [_h for _h in self.config.get("ignored_hosts").split("|") if _h]
         grab_all = self.config.get("grab_all")
 
         if m_type == "project":
             return re.findall(
-                r"\n(https://www\.multiup\.org/(?:en|fr)/download/.*)", self.data
+                r"(https?://www\.multiup\.org/(?:en/|fr/)?download/.*)", self.data
             )
 
         elif m_type in ("download", None):
             url, inputs = self.parse_html_form()
             if inputs is not None:
                 self.data = self.load(
-                    urlparse.urljoin("https://www.multiup.org/", url), post=inputs
+                    urllib.parse.urljoin("https://www.multiup.org/", url), post=inputs
                 )
 
         hosts_data = {}
-        for a in re.findall(
+        for _a in re.findall(
             r'<button (.+?) class="host btn btn-md btn-default btn-block btn-3d hvr-bounce-to-right">',
             self.data,
             re.M,
         ):
-            validity = re.search(r'validity="(\w+)"', a).group(1)
+            validity = re.search(r'validity="(\w+)"', _a).group(1)
             if validity in ("valid", "unknown"):
-                host = re.search(r'nameHost="(.+?)"', a).group(1)
-                url = re.search(r'link="(.+?)"', a).group(1)
+                host = re.search(r'nameHost="(.+?)"', _a).group(1)
+                url = re.search(r'link="(.+?)"', _a).group(1)
                 hosts_data[host] = url
 
         chosen_hosts = []
         # priority hosts goes first
-        for h in hosts_priority:
-            if h in hosts_data and h not in ignored_hosts:
-                self.log_debug(f"Adding '{h}' link")
-                chosen_hosts.append(h)
+        for _h in hosts_priority:
+            if _h in hosts_data and _h not in ignored_hosts:
+                self.log_debug("Adding '%s' link" % _h)
+                chosen_hosts.append(_h)
                 if not grab_all:
                     break
 
         # Now the rest of the hosts
         if grab_all or (not grab_all and not chosen_hosts):
-            for h in hosts_data:
-                if h not in ignored_hosts and h not in chosen_hosts:
-                    self.log_debug(f"Adding '{h}' link")
-                    chosen_hosts.append(h)
+            for _h in hosts_data:
+                if _h not in ignored_hosts and _h not in chosen_hosts:
+                    self.log_debug("Adding '%s' link" % _h)
+                    chosen_hosts.append(_h)
                     if not grab_all:
                         break
 
-        return [hosts_data[h] for h in chosen_hosts]
+        return [hosts_data[_h] for _h in chosen_hosts]
-- 
2.30.2

