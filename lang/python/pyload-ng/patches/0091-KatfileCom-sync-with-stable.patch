From 84f544a2a38572cca7e380bcbf73138f06fa8d16 Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Tue, 15 Jun 2021 02:08:49 +0300
Subject: [PATCH 091/150] [KatfileCom] sync with stable

---
 src/pyload/plugins/downloaders/KatfileCom.py | 71 +++-----------------
 1 file changed, 8 insertions(+), 63 deletions(-)

--- a/src/pyload/plugins/downloaders/KatfileCom.py
+++ b/src/pyload/plugins/downloaders/KatfileCom.py
@@ -1,16 +1,12 @@
 # -*- coding: utf-8 -*-
-import re
 
-from pyload.core.utils import parse
+from ..base.xfs_downloader import XFSDownloader
 
-from ..anticaptchas.SolveMedia import SolveMedia
-from ..base.simple_downloader import SimpleDownloader
 
-
-class KatfileCom(SimpleDownloader):
+class KatfileCom(XFSDownloader):
     __name__ = "KatfileCom"
     __type__ = "downloader"
-    __version__ = "0.01"
+    __version__ = "0.03"
     __status__ = "testing"
 
     __pattern__ = r"https?://(?:www\.)?katfile\.com/\w+"
@@ -26,61 +22,10 @@ class KatfileCom(SimpleDownloader):
     __license__ = "GPLv3"
     __authors__ = [("GammaC0de", "nitzo2001[AT]yahoo[DOT]com")]
 
-    NAME_PATTERN = r">File Name: .+?>(?P<N>.+?)<"
-    SIZE_PATTERN = r">File Size: .+?>(?P<S>[\d.,]+) (?P<U>[\w^_]+)<"
-
-    OFFLINE_PATTERN = r'alt="file not found"'
-
-    WAIT_PATTERN = r"var estimated_time = (\d+);"
-    LINK_PATTERN = r'<a href="(.+?)" id="dlink">'
-
-    COOKIES = [("katfile.com", "lang", "english")]
-
-    def setup(self):
-        self.multi_dl = False
-        self.chunk_limit = 1
-
-    def check_errors(self):
-        m = re.search(r">Please wait (.+?) till next download<", self.data)
-        if m is not None:
-            self.retry(wait=parse.seconds(m.group(1)))
-
-        SimpleDownloader.check_errors(self)
-
-    def handle_free(self, pyfile):
-        url, inputs = self.parse_html_form('id="btn_download"')
-        if inputs is None:
-            self.error(self._("Form 1 not found"))
-
-        inputs.pop("method_premium", None)
-
-        self.data = self.load(pyfile.url, post=inputs)
-
-        url, inputs = self.parse_html_form('name="F1"')
-        if inputs is None:
-            self.error(self._("Form 2 not found"))
-
-        self.check_errors()
-
-        solvemedia = SolveMedia(self.pyfile)
-        captcha_key = solvemedia.detect_key()
-
-        if captcha_key:
-            self.captcha = solvemedia
-            response, challenge = solvemedia.challenge(captcha_key)
-            inputs["adcopy_challenge"] = challenge
-            inputs["adcopy_response"] = response
-
-        else:
-            self.error(self._("Captcha not found"))
-
-        self.data = self.load(pyfile.url, post=inputs)
-
-        if ">Wrong captcha<" in self.data:
-            self.retry_captcha()
+    NAME_PATTERN = r'name="fname" value="(?P<N>.+?)"'
+    SIZE_PATTERN = r'<span id="fsize" .+?>(?P<S>[\d.,]+) (?P<U>[\w^_]+)<'
 
-        self.captcha.correct()
+    WAIT_PATTERN = r"(?:var estimated_time = |Delay between free downloads must be not less than )([\w ]+?)[.;]"
+    LINK_PATTERN = r'<a href="([^"]+)" id="dlink"'
 
-        m = re.search(self.LINK_PATTERN, self.data)
-        if m is not None:
-            self.link = m.group(1)
+    PLUGIN_DOMAIN = "katfile.com"
