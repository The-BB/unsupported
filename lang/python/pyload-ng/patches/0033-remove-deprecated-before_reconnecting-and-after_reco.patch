From cedd4263d308862ad7142c1f45f01cfe9f00720e Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Fri, 14 May 2021 23:40:11 +0300
Subject: [PATCH 033/150] remove deprecated before_reconnecting() and
 after_reconnecting() methods

---
 src/pyload/core/managers/addon_manager.py  | 12 ++++++------
 src/pyload/core/managers/thread_manager.py |  8 ++++----
 src/pyload/plugins/base/addon.py           | 11 -----------
 3 files changed, 10 insertions(+), 21 deletions(-)

--- a/src/pyload/core/managers/addon_manager.py
+++ b/src/pyload/core/managers/addon_manager.py
@@ -242,19 +242,19 @@ class AddonManager:
         self.dispatch_event("package_finished", package)
 
     @lock
-    def before_reconnecting(self, ip):
+    def before_reconnect(self, ip):
         for plugin in self.plugins:
-            plugin.before_reconnecting(ip)
+            plugin.before_reconnect(ip)
 
-        self.dispatch_event("before_reconnecting", ip)
+        self.dispatch_event("before_reconnect", ip)
 
     @lock
-    def after_reconnecting(self, ip):
+    def after_reconnect(self, ip, old_ip):
         for plugin in self.plugins:
             if plugin.is_activated():
-                plugin.after_reconnecting(ip)
+                plugin.after_reconnect(ip, old_ip)
 
-        self.dispatch_event("after_reconnecting", ip)
+        self.dispatch_event("after_reconnect", old_ip, ip)
 
     def start_thread(self, function, *args, **kwargs):
         return AddonThread(self.pyload.thread_manager, function, args, kwargs)
--- a/src/pyload/core/managers/thread_manager.py
+++ b/src/pyload/core/managers/thread_manager.py
@@ -193,11 +193,11 @@ class ThreadManager:
         ) != 0:
             time.sleep(0.25)
 
-        ip = self.get_ip()
+        old_ip = self.get_ip()
 
-        self.pyload.addon_manager.before_reconnecting(ip)
+        self.pyload.addon_manager.before_reconnect(old_ip)
 
-        self.pyload.log.debug(f"Old IP: {ip}")
+        self.pyload.log.debug(f"Old IP: {old_ip}")
 
         try:
             subprocess.run(reconnect_script)
@@ -209,7 +209,7 @@ class ThreadManager:
 
         time.sleep(1)
         ip = self.get_ip()
-        self.pyload.addon_manager.after_reconnecting(ip)
+        self.pyload.addon_manager.after_reconnect(ip, old_ip)
 
         self.pyload.log.info(self._("Reconnected, new IP: {}").format(ip))
 
--- a/src/pyload/plugins/base/addon.py
+++ b/src/pyload/plugins/base/addon.py
@@ -54,8 +54,6 @@ class BaseAddon(BasePlugin):
         #: Automatically register event listeners for functions, attribute will be deleted dont use it yourself
         self.event_map = {}
 
-        self.info["ip"] = None  # TODO: Remove in 0.6.x
-
         #: Callback of periodical job task, used by AddonManager
         self.periodical = Periodical(self, self.periodical_task)
         self.cb = self.periodical.cb  # TODO: Recheck in 0.6.x
@@ -197,18 +195,9 @@ class BaseAddon(BasePlugin):
     def before_reconnect(self, ip):
         pass
 
-    #: Deprecated method, use `before_reconnect` instead (Remove in 0.6.x)
-    def before_reconnecting(self, ip):
-        return self.before_reconnect(ip)
-
     def after_reconnect(self, ip, old_ip):
         pass
 
-    #: Deprecated method, use `after_reconnect` instead (Remove in 0.6.x)
-    def after_reconnecting(self, ip):
-        self.after_reconnect(ip, self.info["ip"])
-        self.info["ip"] = ip
-
     def captcha_task(self, task):
         """
         New captcha task for the plugin, it MUST set the handler and timeout or will be
