From e5a9f71f9a26082e543578b399b8935b4d0d3070 Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Mon, 10 May 2021 21:33:17 +0300
Subject: [PATCH 018/150] code cosmetics

---
 src/pyload/plugins/downloaders/ZDF.py | 49 ++++++++++++++++++++-------
 1 file changed, 36 insertions(+), 13 deletions(-)

--- a/src/pyload/plugins/downloaders/ZDF.py
+++ b/src/pyload/plugins/downloaders/ZDF.py
@@ -14,31 +14,54 @@ from ..base.downloader import BaseDownlo
 class ZDF(BaseDownloader):
     __name__ = "ZDF Mediathek"
     __type__ = "downloader"
-    __version__ = "0.91"
+    __version__ = "0.92"
     __status__ = "testing"
 
     __pattern__ = r"https://(?:www\.)?zdf\.de/(?P<ID>[/\w-]+)\.html"
-    __config__ = [("enabled", "bool", "Activated", True)]
+    __config__ = [
+        ("enabled", "bool", "Activated", True),
+        ("use_premium", "bool", "Use premium account if available", True),
+        ("fallback", "bool", "Fallback to free download if premium fails", True),
+        ("chk_filesize", "bool", "Check file size", True),
+        ("max_wait", "int", "Reconnect if waiting time is greater than minutes", 10),
+    ]
 
     __description__ = """ZDF.de downloader plugin"""
     __license__ = "GPLv3"
     __authors__ = []
 
     def process(self, pyfile):
-        data = self.load(pyfile.url)
+        self.data = self.load(pyfile.url)
         try:
-            apiToken = re.search(r'window\.zdfsite\.player\.apiToken = "([\d\w]+)";', data)[1]
+            api_token = re.search(
+                r'window\.zdfsite\.player\.apiToken = "([\d\w]+)";', self.data
+            ).group(1)
+
+            self.req.http.c.setopt(pycurl.HTTPHEADER, ["Api-Auth: Bearer " + api_token])
+            id = re.match(self.__pattern__, pyfile.url).group("ID")
+
+            filename = json.loads(
+                self.load(
+                    "https://api.zdf.de/content/documents/zdf/" + id + ".json",
+                    get={"profile": "player-3"},
+                )
+            )
+            stream_list = filename["mainVideoContent"]["http://zdf.de/rels/target"][
+                "streams"
+            ]["default"]["extId"]
+
+            streams = json.loads(
+                self.load(
+                    "https://api.zdf.de/tmd/2/ngplayer_2_4/vod/ptmd/mediathek/"
+                    + stream_list
+                )
+            )
+            download_name = streams["priorityList"][0]["formitaeten"][0]["qualities"][
+                0
+            ]["audio"]["tracks"][0]["uri"]
 
-            self.req.http.c.setopt(pycurl.HTTPHEADER, ["Api-Auth: Bearer " + apiToken])
-            id = re.match(self.__pattern__, pyfile.url).group('ID')
-
-            filename = json.loads(self.load("https://api.zdf.de/content/documents/zdf/" + id + ".json",
-                               get={'profile': "player-3"}))
-            stream_list = filename['mainVideoContent']['http://zdf.de/rels/target']['streams']['default']['extId']
-
-            streams = json.loads(self.load("https://api.zdf.de/tmd/2/ngplayer_2_4/vod/ptmd/mediathek/" + stream_list))
-            download_name = streams['priorityList'][0]['formitaeten'][0]['qualities'][0]['audio']['tracks'][0]['uri']
             self.pyfile.name = os.path.basename(id) + os.path.splitext(download_name)[1]
             self.download(download_name)
-        except Exception as e:
-            self.log_error(e)
+
+        except Exception as exc:
+            self.log_error(exc)
