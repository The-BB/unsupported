From 87c1d041dc9d6b5510764364c3d4b882676167fe Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Wed, 15 Dec 2021 01:33:09 +0200
Subject: [PATCH 51/73] Content-Disposition: extract filename from "Location"
 header if filename parameter is missing

---
 src/pyload/core/network/http/http_chunk.py | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

diff --git a/src/pyload/core/network/http/http_chunk.py b/src/pyload/core/network/http/http_chunk.py
index 2df0f5b24..49fccbef1 100644
--- a/src/pyload/core/network/http/http_chunk.py
+++ b/src/pyload/core/network/http/http_chunk.py
@@ -11,7 +11,7 @@ from ntpath import basename as ntpath_basename
 from posixpath import basename as posixpath_basename
 
 import pycurl
-from pyload.core.utils import purge
+from pyload.core.utils import purge, parse
 
 from .http_request import HTTPRequest
 
@@ -222,7 +222,7 @@ class HTTPChunk(HTTPRequest):
                 self.p.size = int(size.group(1))
                 self.p.chunk_support = True
 
-        self.header_parsed = True
+            self.header_parsed = True
 
     def write_body(self, buf):
         #: ignore BOM, it confuses unrar
@@ -261,6 +261,7 @@ class HTTPChunk(HTTPRequest):
         """
         parse data from received header.
         """
+        location = None
         for orgline in self.response_header.splitlines():
             try:
                 orgline = orgline.decode("utf-8")
@@ -274,6 +275,9 @@ class HTTPChunk(HTTPRequest):
             if line.startswith("accept-ranges") and "bytes" in line:
                 self.p.chunk_support = True
 
+            elif line.startswith("location"):
+                location = orgline.split(":", 1)[1].strip()
+
             elif line.startswith("content-disposition"):
                 disposition_value = orgline.split(":", 1)[1].strip()
                 disposition_type, disposition_params = parse_header_line(disposition_value)
@@ -329,6 +333,10 @@ class HTTPChunk(HTTPRequest):
                             except UnicodeDecodeError:
                                 self.log.warning("Content-Disposition: | error: Error when decoding string from iso-8859-1.")
                                 continue
+
+                    elif disposition_type.lower() == "attachment" and location is not None:
+                        fname = parse.name(location)
+
                     else:
                         continue
 
@@ -342,7 +350,7 @@ class HTTPChunk(HTTPRequest):
                 self.p.update_disposition(fname)
 
             if not self.resume and line.startswith("content-length"):
-                self.p.size = int(line.split(":")[1])
+                self.p.size = int(line.split(":", 1)[1])
 
         self.header_parsed = True
 
-- 
2.30.2

