From 1edd924f17ba030d8683550fe932f4717db192ab Mon Sep 17 00:00:00 2001
From: GammaC0de <gammac0de@users.noreply.github.com>
Date: Tue, 23 Nov 2021 23:41:31 +0200
Subject: [PATCH 24/73] remove UgouploadNet

---
 .../plugins/downloaders/UgouploadNet.py       | 60 -------------------
 1 file changed, 60 deletions(-)
 delete mode 100644 src/pyload/plugins/downloaders/UgouploadNet.py

diff --git a/src/pyload/plugins/downloaders/UgouploadNet.py b/src/pyload/plugins/downloaders/UgouploadNet.py
deleted file mode 100644
index 4695c1b96..000000000
--- a/src/pyload/plugins/downloaders/UgouploadNet.py
+++ /dev/null
@@ -1,60 +0,0 @@
-# -*- coding: utf-8 -*-
-
-import re
-
-from ..anticaptchas.ReCaptcha import ReCaptcha
-from ..base.simple_downloader import SimpleDownloader
-
-
-class UgouploadNet(SimpleDownloader):
-    __name__ = "UgouploadNet"
-    __type__ = "downloader"
-    __version__ = "0.04"
-    __status__ = "testing"
-
-    __pattern__ = r"https?://(?:www)?\.ugoupload\.net/\w{4}"
-    __config__ = [
-        ("enabled", "bool", "Activated", True),
-        ("use_premium", "bool", "Use premium account if available", True),
-        ("fallback", "bool", "Fallback to free download if premium fails", True),
-        ("chk_filesize", "bool", "Check file size", True),
-        ("max_wait", "int", "Reconnect if waiting time is greater than minutes", 10),
-    ]
-
-    __description__ = """ugoupload.net downloader plugin"""
-    __license__ = "GPLv3"
-    __authors__ = [("GammaC0de", "nitzo2001[AT]yahoo[DOT]com")]
-
-    NAME_PATTERN = r'<div class="heading-1 animated".*>(.+?)</div>'
-    SIZE_PATTERN = r"\((?P<S>[\d.,]+) (?P<U>[\w^_]+)\)<br/>"
-
-    WAIT_PATTERN = r"var seconds = (\d+);"
-    LINK_FREE_PATTERN = r"<a class='btn btn-free' href='(.+?)'"
-
-    RECAPTCHA_KEY = "6LeuAc4SAAAAAOSry8eo2xW64K1sjHEKsQ5CaS10"
-
-    def setup(self):
-        self.resume_download = False
-        self.multi_dl = False
-
-    def handle_free(self, pyfile):
-        if self.req.code == 404:
-            self.offline()
-
-        self.check_errors()
-
-        m = re.search(self.LINK_FREE_PATTERN, self.data)
-        if m is not None:
-            recaptcha = ReCaptcha(self)
-            response, challenge = recaptcha.challenge(self.RECAPTCHA_KEY)
-
-            self.download(
-                m.group(1),
-                post={
-                    "recaptcha_challenge_field": challenge,
-                    "recaptcha_response_field": response,
-                    "submit": "Submit",
-                    "submitted": "1",
-                    "d": "1",
-                },
-            )
-- 
2.30.2

